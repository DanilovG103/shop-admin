// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                 String     @id @default(cuid())
  name               String     @default("")
  email              String     @unique @default("")
  password           String
  basketId           String     @default("")
  favoritesId        String     @default("")
  role               String?    @default("USER")
  createdAt          DateTime?  @default(now())
  from_Basket_user   Basket[]   @relation("Basket_user")
  from_Request_user  Request[]  @relation("Request_user")
  from_Favorite_user Favorite[] @relation("Favorite_user")
}

model Good {
  id                  String     @id @default(cuid())
  title               String     @default("")
  description         String     @default("")
  brand               Brand?     @relation("Good_brand", fields: [brandId], references: [id])
  brandId             String?    @map("brand")
  audienceCategory    String?
  category            Category?  @relation("Good_category", fields: [categoryId], references: [id])
  categoryId          String?    @map("category")
  price               Int
  images              Image[]    @relation("Good_images")
  createdAt           DateTime?  @default(now())
  from_Basket_goods   Basket[]   @relation("Basket_goods")
  from_Request_goods  Request[]  @relation("Request_goods")
  from_Favorite_goods Favorite[] @relation("Favorite_goods")

  @@index([brandId])
  @@index([categoryId])
}

model Basket {
  id     String  @id @default(cuid())
  goods  Good[]  @relation("Basket_goods")
  user   User?   @relation("Basket_user", fields: [userId], references: [id])
  userId String? @map("user")

  @@index([userId])
}

model Brand {
  id              String @id @default(cuid())
  title           String @default("")
  from_Good_brand Good[] @relation("Good_brand")
}

model Request {
  id             String    @id @default(cuid())
  goods          Good[]    @relation("Request_goods")
  status         String?   @default("CREATED")
  user           User?     @relation("Request_user", fields: [userId], references: [id])
  userId         String?   @map("user")
  recipientName  String    @default("")
  recipientEmail String    @default("")
  phone          String    @default("")
  sum            Int
  address        String    @default("")
  paymentType    String?
  rejectReason   String    @default("")
  createdAt      DateTime? @default(now())

  @@index([userId])
}

model Favorite {
  id     String  @id @default(cuid())
  goods  Good[]  @relation("Favorite_goods")
  user   User?   @relation("Favorite_user", fields: [userId], references: [id])
  userId String? @map("user")

  @@index([userId])
}

model Category {
  id                 String @id @default(cuid())
  title              String @default("")
  from_Good_category Good[] @relation("Good_category")
}

model Image {
  id               String  @id @default(cuid())
  image_filesize   Int?
  image_extension  String?
  image_width      Int?
  image_height     Int?
  image_id         String?
  from_Good_images Good[]  @relation("Good_images")
}
